"""
    oanda 取引履歴のpdf(oa-xx.pdf)から集計
    MT5アカウントの取引履歴が基本、fxTradeアカウントはちょっと加工(スワップが日々入るとか、列名が違うとか)
    ver 0.05
    2024/03/03
    2024/03/02
    src) 
    out) dd_out[ll_xx,dd_xx] llxx:read pdf, dd_xx:etc (df_s 集計)
"""

!pip install tabula-py
import datetime as ii_dt
import numpy as ii_np
import pandas as ii_pd
import pathlib as ii_pt
import plotly as ii_pl
import plotly.subplots as ii_ps
import re as ii_re
import tabula as ii_tb

def ff_mk_r_gsu(df_x):
    """
    """
    df_x['gain'] = (df_x.取引損益.replace(['円', ',', r'\.0{1,}'], ['', '', ''], regex=True)).astype('int64')
    df_x['swap'] = (df_x.スワップ損益.replace(['円', ',', r'\.0{1,}'], ['', '', ''], regex=True)).astype('int64')
    df_x['unt'] = (df_x.数量.replace(',', '', regex=True)).astype('int64')
    return(df_x)


def ff_mk_sum(llx):
    """
    """
    dd_df = {}
    ll_df = []
    df_swp = ii_pd.DataFrame()
    for nn in range(len(llx)):
        if 'チケット' in llx[nn]:
            # api1
            # print(f"elif {nn}")
            df_00 =llx[nn].copy()
            df_00 =ii_pd.concat([df_00,df_00['Unnamed: 7'].str.split(' ',
                     expand=True)], axis=1).drop('Unnamed: 7', axis=1)
            # df_00.rename(columns={"チケット":"チケット\r番号", "Unnamed: 0":"通貨ペア", 
            #   "Unnamed: 1":"取引", "Unnamed: 2":"売買", "Unnamed: 3":"約定値", 
            #   "Unnamed: 4":"数量", "Unnamed: 5":"約定日時", "Unnamed: 6":"取引損益",
            #   "Unnamed: 8":"手数料", "原取引":"原取引\r注文番号", "原取引.1":"原取引\r約定値段",
            #   0:"スポット損益", 1:"スワップ損益"},inplace=True)
            df_00.rename(columns={"Unnamed: 0":"通貨ペア", "Unnamed: 1":"取引", 
              "Unnamed: 2":"売買", "Unnamed: 3":"約定値", "Unnamed: 4":"数量",
              "Unnamed: 5":"約定日時", "Unnamed: 6":"取引損益", "Unnamed: 8":"手数料",
              0:"スポット損益", 1:"スワップ損益"},inplace=True)
            df_00.dropna(inplace=True)
            dd_df['xx_'+ str(nn)] = df_00[['通貨ペア', '取引', '売買', '約定値',
              '数量', '約定日時', '取引損益', 'スポット損益', 'スワップ損益', '原取引']]
            dd_df['xx_'+ str(nn)].set_index('約定日時', inplace = True)
            # print(df_00.columns)
        elif 'チケット\r番号' in llx[nn]:
            # api2
            # print(f"if チケット(\r)番号 {nn}")
            df_00 = llx[nn].copy()
            df_00.rename(columns={'チケット\r番号':'チケット','原取引\r注文番号':'原取引'}, inplace=True)
            dd_df['xx_'+ str(nn)] = df_00[['通貨ペア', '取引', '売買', '約定値', '数量', 
              '約定日時', '取引損益', 'スポット損益', 'スワップ損益', '原取引']]
            dd_df['xx_'+ str(nn)].set_index('約定日時', inplace = True)
        elif 'チケット番号 通貨ペア' in llx[nn]:
            # mt1
            # print(f"if {nn}")
            # llx[nn]['通貨ペア'] = ''
            # llv = llx[nn]['チケット番号 通貨ペア'].values
            # for nnn in range(len(llx[nn])):
            #    llx[nn].loc[nnn, '通貨ペア'] = llv[nnn][-6:]
            df_00 = llx[nn].copy()
            df_00 = ii_pd.concat([df_00,df_00['チケット番号 通貨ペア'].str.split(' ', 
              expand=True)], axis=1).drop('チケット番号 通貨ペア', axis=1)
            df_00.rename(columns={0:'チケット', 1:'通貨ペア'}, inplace=True)
            dd_df['xx_'+ str(nn)] = df_00[['通貨ペア', '取引', '売買', '約定値', '数量',
              '約定日時', '取引損益', 'スポット損益', 'スワップ損益']]
            dd_df['xx_'+ str(nn)].set_index('約定日時', inplace = True)
        elif 'チケット番号' in llx[nn]:
            # mt2
            df_00 = llx[nn].copy()
            df_00.rename(columns={'チケット番号':'チケット'}, inplace=True)
            dd_df['xx_'+ str(nn)] = df_00[['通貨ペア', '取引', '売買', '約定値', '数量',
              '約定日時', '取引損益', 'スポット損益', 'スワップ損益']]
            dd_df['xx_'+ str(nn)].set_index('約定日時', inplace = True)
        elif '受取日時' in llx[nn]:
            df_swp0 = llx[nn].copy().dropna() 
            df_swp0['受取日時'] =df_swp0['受取日時'].astype('datetime64[ns]')
            df_swp0.set_index('受取日時', inplace=True)
            df_swp0['損益'] = (df_swp0['損益'].replace(['円', ',', r'\.[0-9]{1,}'], 
              ['', '', ''], regex=True)).astype('int64')
            df_swp1 = df_swp0[['損益']].resample('1D').sum()
            df_swp = df_swp1[df_swp1['損益'] != 0]
            continue
        elif not '取引' in llx[nn]:
            continue
        ll_df += [dd_df['xx_'+ str(nn)]]
    df_0 = ii_pd.concat(ll_df)
    df_1 = df_0.loc[df_0['取引'] == '決済'].copy()
    df_1.index = ii_pd.to_datetime(df_1.index)
    df_1x = ff_mk_r_gsu(df_1)
    df_1xm = df_1x.loc[df_1x['gain'] < 0].copy()
    # df_1['gain'] = (df_1.取引損益.replace(['円', ','], ['', ''], regex=True)).astype('int64')
    # df_1['swap'] = (df_1.スワップ損益.replace(['円', ','], ['', ''], regex=True)).astype('int64')
    # df_1['unt'] = (df_1.数量.replace(',', '', regex=True)).astype('int64')
    df_1a = df_1.loc[df_1['売買'] == '売'].copy()
    df_1b = df_1.loc[df_1['売買'] == '買'].copy()
    df_1ax = ff_mk_r_gsu(df_1a)
    df_1bx = ff_mk_r_gsu(df_1b)
    df_s = ii_pd.DataFrame()
    df_s['exe'] = df_1x['取引'].resample('1D').count()
    df_s['unt'] = df_1x['unt'].resample('1D').sum()
    df_s['gain'] = df_1x['gain'].resample('1D').sum()
    df_s['swap'] = df_1x['swap'].resample('1D').sum()
    df_s['gm'] = df_1xm['gain'].resample('1D').sum()
    df_s['gm_c'] = df_1xm['gain'].resample('1D').count()
    df_s['a_exe'] = df_1ax['取引'].resample('1D').count()
    df_s['a_unt'] = df_1ax['unt'].resample('1D').sum()
    df_s['a_gain'] = df_1ax['gain'].resample('1D').sum()
    df_s['a_swap'] = df_1ax['swap'].resample('1D').sum()
    df_s['a_mx'] = df_1ax['gain'].resample('1D').max()
    df_s['a_mn'] = df_1ax['gain'].resample('1D').min()
    df_s['b_exe'] = df_1bx['取引'].resample('1D').count()
    df_s['b_unt'] = df_1bx['unt'].resample('1D').sum()
    df_s['b_gain'] = df_1bx['gain'].resample('1D').sum()
    df_s['b_swap'] = df_1bx['swap'].resample('1D').sum()
    df_s['b_mx'] = df_1bx['gain'].resample('1D').max()
    df_s['b_mn'] = df_1bx['gain'].resample('1D').min()
    df_s.fillna(0, inplace=True)
    df_s = df_s.astype('int64')
    if len(df_swp) != 0:
        for nn in df_swp.itertuples():
            df_s.loc[nn.Index, 'swap'] = nn.損益
            df_s.loc[nn.Index, 'gain'] += nn.損益
            if nn.損益 > 0:
                df_s.loc[nn.Index, 'a_swap'] = nn.損益       
                df_s.loc[nn.Index, 'a_gain'] += nn.損益
            elif nn.損益 < 0:
                df_s.loc[nn.Index, 'b_swap'] = nn.損益       
                df_s.loc[nn.Index, 'b_gain'] += - nn.損益
    return({'df_s':df_s, 'df_0':df_0, 'df_1':df_1, 'df_1a':df_1a, 'df_1b':df_1b, 'df_swp':df_swp})


# -- read mk
ll_pdf = list(ii_pt.Path('.').glob('oa*.pdf'))
dd_out = {}
for nn in ll_pdf:
    # nn_hd = nn.name[0:5]
    aas_hd = ii_re.search(r'oa-[^-]*', nn.name).group()
    dd_out[f"ll-{aas_hd}"] = ii_tb.read_pdf(nn, pages='all')
    dd_out[f"dd-{aas_hd}"] = ff_mk_sum(dd_out[f"ll-{aas_hd}"])

"""
# -- sk spreadsheet line
# -- depra
aai_n = 32
aask = f"=SUM(B2:B{aai_n})  =SUM(C2:C{aai_n})	=SUM(D2:D{aai_n})	=SUM(E2:E{aai_n})	=SUM(F2:F{aai_n})	"
aask += f"=SUM(G2:G{aai_n})	=SUM(H2:H{aai_n})	=SUM(I2:I{aai_n})	=SUM(J2:J{aai_n})	=SUM(K2:K{aai_n})	"
aask += f"=MAX(L2:L{aai_n})	=MIN(M2:M{aai_n})	=SUM(N2:N{aai_n})	=SUM(O2:O{aai_n})	=SUM(P2:P{aai_n})	"
aask += f"=SUM(Q2:Q{aai_n})	=MAX(R2:R{aai_n})	=min(S2:S{aai_n})"

# -sk spreadsheet line
aas_seet = 'mt_m'
aai_st = 2
aai_ed = 1000
aai_r = 8
aas_skn = ""
aas_skn += f"=sumifs('{aas_seet}'!B{aai_st}:B{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!C{aai_st}:C{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!D{aai_st}:D{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!E{aai_st}:E{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!F{aai_st}:F{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!G{aai_st}:G{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!H{aai_st}:H{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!I{aai_st}:I{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!J{aai_st}:J{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!K{aai_st}:K{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=MAXIFS('{aas_seet}'!L{aai_st}:L{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=MINIFS('{aas_seet}'!M{aai_st}:M{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!N{aai_st}:N{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!O{aai_st}:O{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!P{aai_st}:P{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=sumifs('{aas_seet}'!Q{aai_st}:Q{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=MAXIFS('{aas_seet}'!R{aai_st}:R{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
aas_skn += f"=MINIFS('{aas_seet}'!S{aai_st}:S{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
# print(aas_skn)
"""
def ff_mk_skn(aas_seet, aai_r, aai_st=2, aai_ed=1000):
  """
  """
  aas_skn = ""
  aas_skn += f"=sumifs('{aas_seet}'!B{aai_st}:B{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!C{aai_st}:C{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!D{aai_st}:D{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!E{aai_st}:E{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!F{aai_st}:F{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!G{aai_st}:G{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!H{aai_st}:H{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!I{aai_st}:I{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!J{aai_st}:J{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!K{aai_st}:K{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=MAXIFS('{aas_seet}'!L{aai_st}:L{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=MINIFS('{aas_seet}'!M{aai_st}:M{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!N{aai_st}:N{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!O{aai_st}:O{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!P{aai_st}:P{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=sumifs('{aas_seet}'!Q{aai_st}:Q{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=MAXIFS('{aas_seet}'!R{aai_st}:R{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  aas_skn += f"=MINIFS('{aas_seet}'!S{aai_st}:S{aai_ed},'{aas_seet}'!A{aai_st}:A{aai_ed}, \">=\"&A{aai_r},'{aas_seet}'!A{aai_st}:A{aai_ed}, \"<\"&A{aai_r + 1})	"
  print(aas_skn)
  return(aas_skn)


print("@@ do")
print("print dd_out['dd_xx']['df_s']")
print("aas_skn = ff_mk_skn('mt-m', 99)")
